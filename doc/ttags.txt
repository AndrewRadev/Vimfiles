*ttags.txt*         Tag list browser (List, filter, preview, jump to tags)
                    Author: Tom Link, micathom at gmail com

:TTags [KIND] [TAGS_RX] [FILE_RX]
In order to match any kind/rx, use *.
E.g. TTags * * _foo.vim$

Features:
    - List tags
    - Filter tags matching a pattern
    - Jump/Preview tags
    - Insert tags (and a template for the argument list if supported by 
      tSkeleton, which has to be installed for this)


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed.

This script requires tlib (vimscript #1863) to be installed.

Suggested maps (to be set in ~/.vimrc): >
    noremap <Leader>g. :TTags<cr>
    noremap <Leader>g# :call ttags#List(0, "*", tlib#rx#Escape(expand("<cword>")))<cr>
    noremap <Leader>g* :call ttags#List(0, "*", tlib#rx#Escape(expand("<cword>")) .".*")<cr>
    noremap <Leader>g? :call ttags#List(1, "*", tlib#rx#Escape(expand("<cword>")))<cr>
    for c in split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '\zs')
        exec 'noremap <Leader>g'. c .' :TTags '. c .'<cr>'
    endfor

You can use :echo keys(ttags#Kinds())<cr> to find out which kinds are defined.


========================================================================
Contents~

        g:ttags_kinds ............ |g:ttags_kinds|
        g:ttags_name_rx .......... |g:ttags_name_rx|
        g:ttags_filename_rx ...... |g:ttags_filename_rx|
        g:ttags_display .......... |g:ttags_display|
        g:ttags_rewrite .......... |g:ttags_rewrite|
        g:ttags_match_front ...... |g:ttags_match_front|
        g:ttags_match_end ........ |g:ttags_match_end|
        g:ttags_highlighting ..... |g:ttags_highlighting|
        g:ttags_world ............ |g:ttags_world|
        :TTags ................... |:TTags|
        :TTagselect .............. |:TTagselect|
        ttags#Kinds .............. |ttags#Kinds()|
        ttags#Highlight .......... |ttags#Highlight()|
        ttags#List ............... |ttags#List()|
        ttags#Select ............. |ttags#Select()|
        ttags#SelectTags ......... |ttags#SelectTags()|
        ttags#PreviewTag ......... |ttags#PreviewTag()|
        ttags#GotoTag ............ |ttags#GotoTag()|
        ttags#InsertTemplate ..... |ttags#InsertTemplate()|
        ttags#RewriteCygwinTag ... |ttags#RewriteCygwinTag()|


========================================================================
plugin/ttags.vim~

                                                    *g:ttags_kinds*
g:ttags_kinds                  (default: '')

                                                    *g:ttags_name_rx*
g:ttags_name_rx                (default: '')

                                                    *g:ttags_filename_rx*
g:ttags_filename_rx            (default: '')

                                                    *g:ttags_display*
g:ttags_display                (default: 'tlib')
    How to display the tags list. Can be one of: tlib, quickfix, locations

                                                    *g:ttags_rewrite*
g:ttags_rewrite                (default: '')
    The name of a function, which takes the filename as argument, that 
    rewrites the tag filename (e.g. in order to circumvent 
    incompatibilities between cygwin ctags & windows vim).

                                                    *g:ttags_match_front*
g:ttags_match_front            (default: 1)
    Show tags that begin with the pattern. Can be buffer-local.

                                                    *g:ttags_match_end*
g:ttags_match_end              (default: 1)
    Show tags that end with the pattern. Can be buffer-local.

                                                    *g:ttags_highlighting*
g:ttags_highlighting
    This variable can be buffer local.
    
    Filetype specfic highlighting can be defined as 
    g:ttags_highlighting_{&filetype}.

                                                    *g:ttags_world*
g:ttags_world

                                                    *:TTags*
TTags[!] [KIND] [TAGS_RX] [FILE_RX]
    See also |ttags#List()| and |ttags#SelectTags()|.
    
    Examples:
    Match tags in the current file: >
      TTags * * .
    Show classes [c]: >
      TTags c
    Show classes beginning with Foo: >
      TTags c ^Foo
<

                                                    *:TTagselect*
TTagselect[!] kind:KIND FIELD:REGEXP ...
    For values of field see |taglist()|. These fields depend also on your 
    tags generator.
    
    If you want to automatically restict your searches to the current 
    namespace, you would have to write a function that determines the 
    namespace (and maybe e-mail it to me) and then call 
    |ttags#SelectTags()|.
    
    Examples:
      " Show tags matching "bar" in class "Foo"
      TTagselect name:bar class:Foo


========================================================================
autoload/ttags.vim~

                                                    *ttags#Kinds()*
ttags#Kinds(...)

                                                    *ttags#Highlight()*
ttags#Highlight(tags)

                                                    *ttags#List()*
ttags#List(use_extra, ?kind='', ?rx='', ?file_rx='')
    Calls |ttags#SelectTags()|.

                                                    *ttags#Select()*
ttags#Select(use_extra, keyargs_as_string)
    Calls |ttags#SelectTags()|.

                                                    *ttags#SelectTags()*
ttags#SelectTags(use_extra, constraints)
    Arguments:
      use_extra: Use extra tags (see |g:tlib_tags_extra|).
      constraints: A dictionary of fields and corresponding regexps
        kind     :: The tag letter ID ("*" = match all tags)
        name     :: A rx matching the tag ("*" = match all tags)
        filename :: A rx matching the filename ('.' = match the current 
                    file only)

                                                    *ttags#PreviewTag()*
ttags#PreviewTag(world, selected)

                                                    *ttags#GotoTag()*
ttags#GotoTag(world, selected)

                                                    *ttags#InsertTemplate()*
ttags#InsertTemplate(world, selected)

                                                    *ttags#RewriteCygwinTag()*
ttags#RewriteCygwinTag(filename)



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
