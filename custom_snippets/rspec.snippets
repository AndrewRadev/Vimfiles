snippet be
	before(:each) do
	  ${1}
	end
snippet ba
	before(:all) do
	  ${1}
	end
snippet i
	it "${1:should foo}"
snippet it
	it "${1:should foo}" do
	  ${2}
	end
snippet des
	describe ${1:Object} do
	  ${2}
	end
snippet con
	context "${1:in a foo condition}" do
	  ${2}
	end
# Equality
snippet s=
	should == ${1}
snippet sn=
	should_not == ${1}
snippet sbp
	${1:target}.should ${2:be_${3:predicate}} ${4}
snippet snbp
	${1:target}.should_not ${2:be_${3:predicate}} ${4}
# Collection specs
snippet sh
	should have(${1}).${2:things}
snippet shal
	should have_at_least(${1}).${2:things}
snippet sham
	should have_at_most(${1}).${2:things}
# Sending messages to mock objects
snippet sr
	should_receive(:${1:message})
snippet snr
	should_not_receive(:${1:message})
snippet srt
	should respond_to(:${1:sym})
snippet snrt
	should_not respond_to(:${1:sym})
