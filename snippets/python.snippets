snippet #!
	#!/usr/bin/env python

snippet #t
	# TODO (`strftime("%Y-%m-%d")`) ${1}
snippet imp
	import ${1:module}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet wh
	while ${1:condition}:
		${2:# code...}
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cla
	class ${1:`lib#CapitalCamelCase(Filename())`}(${2:object}):
		"""
		${3:TODO: docstring for $1}
		"""
		def __init__(self):
			${4:super($1, self).__init__()}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""
		${3:TODO: docstring for $1}
		"""
		${4:pass}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# Lambda
snippet f
	lambda ${1:vars} : ${2:action}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
#
# PyQt4 snippets
#
snippet qimp
	import sys

	from PyQt4.QtCore import *
	from PyQt4.QtGui import *
snippet qcla
	class ${1:`lib#CapitalCamelCase(Filename())`}(${2:QMainWindow}):
		def __init__(self, parent=None):
			super($2, self).__init__(parent)
