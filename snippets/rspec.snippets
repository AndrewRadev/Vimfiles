snippet be
	before :each do
	  ${1}
	end
snippet ba
	before :all do
	  ${1}
	end
snippet i
	it "${1:twiddles}"
snippet it
	it "${1:twiddles}" do
	  ${2}
	end
snippet spec
	specify "${1:twiddling}" do
	  ${2}
	end
snippet des
	describe ${1:Object} do
	  ${2}
	end
snippet con
	context "${1:in a foo condition}" do
	  ${2}
	end
snippet ch
	expect {
		${1}
	}.to change(${2})${3}
snippet let
	let(:${1:subject}) { ${2} }
# Equality
snippet se
	should eq ${1}
snippet sne
	should_not eq ${1}
snippet sb
	should be ${1}
snippet snb
	should_not be ${1}
snippet sbn
	should be_nil
snippet snbn
	should_not be_nil
snippet sbp
	should be_${1:predicate}
snippet snbp
	should_not be_${1:predicate}
# Collection specs
snippet sh
	should have(${1}).${2:things}
snippet shal
	should have_at_least(${1}).${2:things}
snippet sham
	should have_at_most(${1}).${2:things}
# Sending messages to mock objects
snippet sr
	should_receive(:${1:message})
snippet snr
	should_not_receive(:${1:message})
snippet srt
	should respond_to(:${1:sym})
snippet snrt
	should_not respond_to(:${1:sym})
