snippet #!
#! /usr/bin/env ruby

endsnippet

snippet req
require '${1}'
endsnippet

snippet dirname
File.dirname(${1:__FILE__})
endsnippet

snippet #t
# TODO (`!v strftime("%Y-%m-%d")`) ${1}
endsnippet

snippet =
#{${1}}
endsnippet

snippet case
case ${1:object}
when ${2:condition}
	${3}
end
endsnippet

snippet when
when ${1:condition}
	${2}
endsnippet

snippet def
def ${1:method_name}
end
endsnippet

snippet defi
def initialize${1}
end
endsnippet

snippet if
if ${1:condition}
	${2}
end
endsnippet

snippet ife
if ${1:condition}
	${2}
else
	${3}
end
endsnippet

snippet eif
elsif ${1:condition}
	${2}
endsnippet

snippet unless
unless ${1:condition}
	${2}
end
endsnippet

snippet wh
while ${1:condition}
	${2}
end
endsnippet

snippet until
until ${1:condition}
	${2}
end
endsnippet

snippet cla
class ${1:`!v lib#CapitalCamelCase(expand('%:t:r'))`}
end
endsnippet

snippet mod
module ${1:`!v lib#CapitalCamelCase(expand('%:t:r'))`}
end
endsnippet

snippet r
attr_reader :${1:attr_names}
endsnippet

snippet w
attr_writer :${1:attr_names}
endsnippet

snippet rw
attr_accessor :${1:attr_names}
endsnippet

snippet am
alias_method :${1:new_name}, :${2:old_name}
endsnippet

snippet bm
Benchmark.bm do |bm|
	bm.report do
		${1}
	end
end
endsnippet

snippet l
lambda { |${1:args}| ${2} }
endsnippet

snippet .e
.each do |${1:n}|
	${2}
end
endsnippet

snippet do
do
	${1}
end
endsnippet

snippet dov
do |${1:variable}|
	${2}
end
endsnippet

snippet <<
<<~EOF
	${1}
EOF
endsnippet

snippet pry
require 'pry'; binding.pry
endsnippet

snippet usage
if ARGV.count < ${1}
	STDERR.puts "USAGE: ${2}"
	exit 1
end
endsnippet

snippet test
test "${1:description}" do
	${2}
end
endsnippet

snippet putsvar
puts "${1:variable}: #{$1.inspect}"
endsnippet

snippet bundler
require 'bundler/inline'

gemfile do
	source 'https://rubygems.org'
	${1}
end
endsnippet

snippet frozen
# frozen_string_literal: true
endsnippet
